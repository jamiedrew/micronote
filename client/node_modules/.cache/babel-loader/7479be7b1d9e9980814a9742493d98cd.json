{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamie\\\\Documents\\\\Dev\\\\WebDev\\\\micronote\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport localforage from \"localforage\";\nimport Sidebar from \"./Components/Sidebar\";\nimport NoteList from \"./Components/NoteList\";\nimport Account from \"./Components/Account\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cookies, setCookies] = useCookies();\n  const [user, setUser] = useState({});\n\n  const getUserInfo = async () => {\n    try {\n      let userData;\n\n      if (cookies.micronote) {\n        console.log(\"Getting internet data\");\n        userData = await axios.get(\"/account/user\");\n        console.log(userData.data);\n      } else {\n        console.log(\"getting local data\");\n        userData = await localforage.getItem(\"notes\");\n        console.log(userData.data);\n      }\n\n      setUser(userData);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // get user on page load if a cookie exists for micronote\n\n\n  useEffect(() => {\n    getUserInfo();\n  }, [cookies]); // pass down functions for the account management\n  // REGISTER / LOGIN / LOGOUT sets user state and cookies\n\n  const updateUserState = async user => {\n    await setUser(user);\n  }; // DEBUG - making sure the user is being set\n  // useEffect(() => {\n  //   if (user.id) console.log(user);\n  // }, [user])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Account, {\n      id: user.id,\n      username: user.username,\n      updateUserState: updateUserState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {\n        username: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: /*#__PURE__*/_jsxDEV(NoteList, {\n        userID: user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"nvexSc0Vr88stVnjBTQcL0HVOjU=\", false, function () {\n  return [useCookies];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jamie/Documents/Dev/WebDev/micronote/client/src/App.js"],"names":["React","useState","useEffect","useCookies","axios","localforage","Sidebar","NoteList","Account","App","cookies","setCookies","user","setUser","getUserInfo","userData","micronote","console","log","get","data","getItem","error","updateUserState","id","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BR,UAAU,EAA1C;AACA,QAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMa,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,UAAIC,QAAJ;;AAEA,UAAIL,OAAO,CAACM,SAAZ,EAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAH,QAAAA,QAAQ,GAAG,MAAMX,KAAK,CAACe,GAAN,CAAU,eAAV,CAAjB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACK,IAArB;AACD,OAJD,MAIO;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAH,QAAAA,QAAQ,GAAG,MAAMV,WAAW,CAACgB,OAAZ,CAAoB,OAApB,CAAjB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACK,IAArB;AACD;;AAEDP,MAAAA,OAAO,CAACE,QAAD,CAAP;AACD,KAdD,CAcE,OAAOO,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACD;AACF,GAlBD,CALa,CAyBb;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACJ,OAAD,CAFM,CAAT,CA1Ba,CA8Bb;AACA;;AAEA,QAAMa,eAAe,GAAG,MAAOX,IAAP,IAAgB;AACtC,UAAMC,OAAO,CAACD,IAAD,CAAb;AACD,GAFD,CAjCa,CAqCb;AACA;AACA;AACA;;;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAGE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,IAAI,CAACY,EAAlB;AAAsB,MAAA,QAAQ,EAAEZ,IAAI,CAACa,QAArC;AAA+C,MAAA,eAAe,EAAEF;AAAhE;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEX,IAAI,CAACa;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEb,IAAI,CAACY;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmBD;;GA7DQf,G;UAEyBN,U;;;KAFzBM,G;AA+DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport localforage from \"localforage\";\n\nimport Sidebar from \"./Components/Sidebar\";\nimport NoteList from \"./Components/NoteList\";\nimport Account from \"./Components/Account\";\n\nimport './App.css';\n\nfunction App() {\n\n  const [ cookies, setCookies ] = useCookies();\n  const [ user, setUser ] = useState({});\n\n  const getUserInfo = async () => {\n    try {\n      let userData;\n\n      if (cookies.micronote) {\n        console.log(\"Getting internet data\")\n        userData = await axios.get(\"/account/user\")\n        console.log(userData.data);\n      } else {\n        console.log(\"getting local data\");\n        userData = await localforage.getItem(\"notes\");\n        console.log(userData.data);\n      }\n\n      setUser(userData);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // get user on page load if a cookie exists for micronote\n  useEffect(() => {\n    getUserInfo();\n  }, [cookies])\n\n  // pass down functions for the account management\n  // REGISTER / LOGIN / LOGOUT sets user state and cookies\n\n  const updateUserState = async (user) => {\n    await setUser(user);\n  }\n\n  // DEBUG - making sure the user is being set\n  // useEffect(() => {\n  //   if (user.id) console.log(user);\n  // }, [user])\n\n  return (\n\n      <div className=\"App\">\n\n        {/* account management */}\n        <Account id={user.id} username={user.username} updateUserState={updateUserState} />\n\n        {/* sidebar */}\n        <div id=\"sidebar\">\n          <Sidebar username={user.username} />\n        </div>\n\n        {/* main content */}\n        <div id=\"main\">\n          <NoteList userID={user.id} />\n        </div>\n\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}