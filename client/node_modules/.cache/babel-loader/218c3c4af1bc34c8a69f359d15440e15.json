{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamie\\\\Documents\\\\Dev\\\\WebDev\\\\micronote\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport UserContext from \"./Utils/Contexts/UserContext\";\nimport Sidebar from \"./Components/Sidebar\";\nimport NoteList from \"./Components/NoteList\";\nimport Account from \"./Components/Account\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cookies, setCookies] = useCookies();\n  const [user, setUser] = useState({});\n\n  const getUserInfo = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"/account/user\");\n      setUser(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // get user on page load if a cookie exists for micronote\n\n\n  useEffect(() => {\n    if (cookies.micronote && !user.id) {\n      getUserInfo();\n    } else return;\n  }, []); // pass down functions for the account management\n  // REGISTER / LOGIN / LOGOUT sets user state and cookies\n  // DEBUG - making sure the user is being set\n\n  useEffect(() => {\n    if (user.id) console.log(user);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Account, {\n      id: user.id,\n      username: user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {\n        username: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: /*#__PURE__*/_jsxDEV(NoteList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"YzfsuDA1xsa75zhyJb1lg2FrngM=\", false, function () {\n  return [useCookies];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jamie/Documents/Dev/WebDev/micronote/client/src/App.js"],"names":["React","useState","useEffect","useContext","useCookies","axios","UserContext","Sidebar","NoteList","Account","App","cookies","setCookies","user","setUser","getUserInfo","data","get","error","console","micronote","id","log","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BR,UAAU,EAA1C;AACA,QAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMX,KAAK,CAACY,GAAN,CAAU,eAAV,CAAvB;AACAH,MAAAA,OAAO,CAACE,IAAD,CAAP;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAPD,CALa,CAcb;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAO,CAACS,SAAR,IAAqB,CAACP,IAAI,CAACQ,EAA/B,EAAmC;AACjCN,MAAAA,WAAW;AACZ,KAFD,MAEO;AACR,GAJQ,EAIN,EAJM,CAAT,CAfa,CAqBb;AACA;AAEA;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,CAACQ,EAAT,EAAaF,OAAO,CAACG,GAAR,CAAYT,IAAZ;AACd,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAGE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,IAAI,CAACQ,EAAlB;AAAsB,MAAA,QAAQ,EAAER,IAAI,CAACU;AAArC;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEV,IAAI,CAACU;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmBD;;GAhDQb,G;UAEyBN,U;;;KAFzBM,G;AAkDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\n\nimport UserContext from \"./Utils/Contexts/UserContext\";\n\nimport Sidebar from \"./Components/Sidebar\";\nimport NoteList from \"./Components/NoteList\";\nimport Account from \"./Components/Account\";\n\nimport './App.css';\n\nfunction App() {\n\n  const [ cookies, setCookies ] = useCookies();\n  const [ user, setUser ] = useState({});\n\n  const getUserInfo = async () => {\n    try {\n      const { data } = await axios.get(\"/account/user\");\n      setUser(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // get user on page load if a cookie exists for micronote\n  useEffect(() => {\n    if (cookies.micronote && !user.id) {\n      getUserInfo();\n    } else return;\n  }, [])\n\n  // pass down functions for the account management\n  // REGISTER / LOGIN / LOGOUT sets user state and cookies\n\n  // DEBUG - making sure the user is being set\n  useEffect(() => {\n    if (user.id) console.log(user);\n  }, [user])\n\n  return (\n\n      <div className=\"App\">\n\n        {/* account management */}\n        <Account id={user.id} username={user.username} />\n\n        {/* sidebar */}\n        <div id=\"sidebar\">\n          <Sidebar username={user.username} />\n        </div>\n\n        {/* main content */}\n        <div id=\"main\">\n          <NoteList />\n        </div>\n\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}