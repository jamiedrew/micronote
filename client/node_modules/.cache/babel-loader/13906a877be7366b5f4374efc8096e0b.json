{"ast":null,"code":"import _toConsumableArray from\"C:/Users/jamie/Documents/Dev/WebDev/micronote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/jamie/Documents/Dev/WebDev/micronote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/jamie/Documents/Dev/WebDev/micronote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/jamie/Documents/Dev/WebDev/micronote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import localforage from\"localforage\";import{FontAwesomeIcon as FA}from'@fortawesome/react-fontawesome';import{faTrash,faPencilAlt,faCheck,faTimes}from'@fortawesome/free-solid-svg-icons';import\"./NoteList.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NoteList=function NoteList(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),noteList=_useState4[0],setNoteList=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newNote=_useState6[0],setNewNote=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),noteID=_useState8[0],setNoteID=_useState8[1];var getLocalNotes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var notes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setLoading(true);_context.next=4;return localforage.getItem(\"notes\");case 4:notes=_context.sent;setLoading(false);setNoteList(notes);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function getLocalNotes(){return _ref.apply(this,arguments);};}();var submitNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var notes,note,submittedNote;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();// if the state holds a noteID, it'll update that note\n// if not it'll make a new one\nif(!(noteID!==\"\"&&newNote!==\"\")){_context2.next=21;break;}_context2.prev=2;_context2.next=5;return localforage.getItem(\"notes\");case 5:notes=_context2.sent;note=notes.find(function(note){return note.id===noteID;});note.text=newNote;note.modifiedDate=new Date().toISOString();localforage.setItem(\"notes\",notes);setNoteList(notes);setNewNote(\"\");setNoteID(\"\");_context2.next=18;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](2);console.error(_context2.t0);case 18:;_context2.next=22;break;case 21:if(newNote.length>0){submittedNote={id:\"\".concat(Math.floor(Math.random()*9999)).concat(Date.now()),text:newNote,createdDate:new Date().toISOString(),modifiedDate:new Date().toISOString()};setNoteList([submittedNote].concat(_toConsumableArray(noteList)));localforage.setItem(\"notes\",[submittedNote].concat(_toConsumableArray(noteList))).then(setNewNote(\"\"));}case 22:case\"end\":return _context2.stop();}}},_callee2,null,[[2,15]]);}));return function submitNote(_x){return _ref2.apply(this,arguments);};}();var deleteNewNote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event){var filteredList,notesList;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:event.preventDefault();if(!(noteID===\"\"&&newNote!==\"\")){_context3.next=5;break;}setNewNote(\"\");_context3.next=14;break;case 5:_context3.next=7;return localforage.getItem(\"notes\");case 7:notesList=_context3.sent;_context3.next=10;return localforage.setItem(\"notes\",notesList.filter(function(item){return item.id!==noteID;}));case 10:filteredList=_context3.sent;setNoteList(filteredList);setNewNote(\"\");setNoteID(\"\");case 14:case\"end\":return _context3.stop();}}},_callee3);}));return function deleteNewNote(_x2){return _ref3.apply(this,arguments);};}();// get local notes on page load\nuseEffect(function(){getLocalNotes();},[]);// just having a look\nuseEffect(function(){return console.log(noteList);},[noteList]);var deleteNote=function deleteNote(id){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var notesList,filteredList;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return localforage.getItem(\"notes\");case 2:notesList=_context4.sent;_context4.next=5;return localforage.setItem(\"notes\",notesList.filter(function(item){return item.id!==id;}));case 5:filteredList=_context4.sent;setNoteList(filteredList);case 7:case\"end\":return _context4.stop();}}},_callee4);}));};var editNote=function editNote(id,text){return function(){setNoteID(id);setNewNote(text);};};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"new-note\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"note\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"create-note\",children:\"Create a new note\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newNote,onChange:function onChange(event){return setNewNote(event.target.value);},placeholder:\"New note...\",form:\"create-note\",required:true})]}),/*#__PURE__*/_jsxs(\"form\",{id:\"create-note\",className:\"actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:deleteNewNote,children:/*#__PURE__*/_jsx(FA,{icon:faTimes})}),/*#__PURE__*/_jsx(\"button\",{onClick:submitNote,children:/*#__PURE__*/_jsx(FA,{icon:faCheck})})]})]}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading\"}):/*#__PURE__*/_jsx(\"div\",{id:\"note-list\",children:noteList.map(function(note){return/*#__PURE__*/_jsx(Note,{id:note.id,text:note.text,deleteNote:deleteNote,editNote:editNote},note.id);})})]});};var Note=function Note(_ref5){var text=_ref5.text,id=_ref5.id,editNote=_ref5.editNote,deleteNote=_ref5.deleteNote;return/*#__PURE__*/_jsxs(\"div\",{className:\"note\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text\",children:text}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:editNote(id,text),children:/*#__PURE__*/_jsx(FA,{icon:faPencilAlt})}),/*#__PURE__*/_jsx(\"button\",{onClick:deleteNote(id),children:/*#__PURE__*/_jsx(FA,{icon:faTrash})})]})]});};export default NoteList;","map":{"version":3,"sources":["C:/Users/jamie/Documents/Dev/WebDev/micronote/client/src/Components/NoteList.jsx"],"names":["React","useState","useEffect","localforage","FontAwesomeIcon","FA","faTrash","faPencilAlt","faCheck","faTimes","NoteList","loading","setLoading","noteList","setNoteList","newNote","setNewNote","noteID","setNoteID","getLocalNotes","getItem","notes","console","error","submitNote","event","preventDefault","note","find","id","text","modifiedDate","Date","toISOString","setItem","length","submittedNote","Math","floor","random","now","createdDate","then","deleteNewNote","notesList","filter","item","filteredList","log","deleteNote","editNote","target","value","map","Note"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport localforage from \"localforage\";\n\nimport { FontAwesomeIcon as FA} from '@fortawesome/react-fontawesome'\nimport { faTrash, faPencilAlt, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport \"./NoteList.css\";\n\nconst NoteList = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [noteList, setNoteList] = useState([]);\n    const [newNote, setNewNote] = useState(\"\");\n    const [noteID, setNoteID] = useState(\"\");\n\n    const getLocalNotes = async () => {\n        try {\n            setLoading(true)\n            const notes = await localforage.getItem(\"notes\");\n            setLoading(false);\n            setNoteList(notes);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const submitNote = async (event) => {\n        event.preventDefault();\n\n        // if the state holds a noteID, it'll update that note\n        // if not it'll make a new one\n        if (noteID !== \"\" && newNote !== \"\") {\n            try {\n\n                const notes = await localforage.getItem(\"notes\");\n                const note = notes.find(note => note.id === noteID);\n\n                note.text = newNote;\n                note.modifiedDate = new Date().toISOString();\n\n                localforage.setItem(\"notes\", notes)\n\n                setNoteList(notes);\n                setNewNote(\"\");\n                setNoteID(\"\");\n\n            } catch (error) {\n                console.error(error);\n            };\n        } else {\n            if (newNote.length > 0) {\n                let submittedNote = {\n                    id: `${Math.floor(Math.random() * 9999)}${Date.now()}`,\n                    text: newNote,\n                    createdDate: new Date().toISOString(),\n                    modifiedDate: new Date().toISOString()\n                };\n    \n                setNoteList([submittedNote, ...noteList]);\n                \n                localforage.setItem(\"notes\", [submittedNote, ...noteList])\n                    .then(setNewNote(\"\"));\n            }\n        }\n        \n    };\n\n    const deleteNewNote = async (event) => {\n\n        event.preventDefault();\n\n        if (noteID === \"\" && newNote !== \"\") {\n            setNewNote(\"\");\n        } else {\n            let filteredList;\n            const notesList = await localforage.getItem(\"notes\")\n\n            filteredList = await localforage.setItem(\"notes\", notesList.filter(item => item.id !== noteID));\n\n            setNoteList(filteredList);\n            setNewNote(\"\");\n            setNoteID(\"\");\n        }\n\n    }\n\n    // get local notes on page load\n    useEffect(() => {\n        getLocalNotes();\n    }, []);\n\n    // just having a look\n    useEffect(() => console.log(noteList), [noteList])\n\n    const deleteNote = id => async () => {\n        const notesList = await localforage.getItem(\"notes\")\n        const filteredList = await localforage.setItem(\"notes\", notesList.filter(item => item.id !== id));\n        setNoteList(filteredList);\n    }\n\n    const editNote = (id, text) => () => {\n        setNoteID(id);\n        setNewNote(text);\n    }\n\n    return (\n\n        <React.Fragment>\n\n            <div id=\"new-note\">\n\n                <div id=\"note\">\n                    <label htmlFor=\"create-note\">Create a new note</label>\n                    <textarea\n                        value={newNote}\n                        onChange={event => setNewNote(event.target.value)}\n                        placeholder=\"New note...\"\n                        form=\"create-note\"\n                        required />\n                </div>\n\n                <form id=\"create-note\" className=\"actions\">\n                    <button onClick={deleteNewNote}><FA icon={faTimes} /></button>\n                    <button onClick={submitNote}><FA icon={faCheck} /></button>\n                </form>\n\n            </div>\n\n            { loading ? <p>Loading</p> :  \n                <div id=\"note-list\">\n\n                    {noteList.map(note =>\n                                    <Note\n                                        key={note.id}\n                                        id={note.id}\n                                        text={note.text}\n                                        deleteNote={deleteNote}\n                                        editNote={editNote} /> \n                                    )}\n                </div>\n            }\n\n            \n\n        </React.Fragment>\n        \n    )\n}\n\nconst Note = ({ text, id, editNote, deleteNote }) => {\n\n    return (\n        <div className=\"note\">\n            <div className=\"text\">{text}</div>\n\n            <div className=\"actions\">\n                <button onClick={editNote(id, text)}><FA icon={faPencilAlt} /></button>\n                <button onClick={deleteNote(id)}><FA icon={faTrash} /></button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default NoteList;"]},"metadata":{},"sourceType":"module"}